/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (c) 2014-2019 Bruno Augusto Nassif Travencolo.
 * All Rights Reserved.
 *
 * This file is part of DyNetVis Project (DyNetVis).
 *
 * How to cite this software:
 *  
@inproceedings{Linhares:2017:DSV:3019612.3019686,
 author = {Linhares, Claudio D. G. and Traven\c{c}olo, Bruno A. N. and Paiva, Jose Gustavo S. and Rocha, Luis E. C.},
 title = {DyNetVis: A System for Visualization of Dynamic Networks},
 booktitle = {Proceedings of the Symposium on Applied Computing},
 series = {SAC '17},
 year = {2017},
 isbn = {978-1-4503-4486-9},
 location = {Marrakech, Morocco},
 pages = {187--194},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/3019612.3019686},
 doi = {10.1145/3019612.3019686},
 acmid = {3019686},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {complex networks, dynamic graph visualization, dynamic networks, recurrent neighbors, temporal activity map},
} 
 *  
 * DyNetVis is free software: you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License as published by the Free 
 * Software Foundation, either version 3 of the License, or (at your option) 
 * any later version.
 *
 * DyNetVis is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 *
 * This code was developed by members of Lab of Complex Network Visualization at 
 * Federal University of Uberlândia, Brazil - (https://sites.google.com/view/dynetvis/team?authuser=0). 
 * The initial developer of the original code is Claudio D. G. Linhares <claudiodgl@gmail.com>.
 *
 * Contributor(s): Jean R. Ponciano -- jeanrobertop@gmail.com, Luis E. C. Rocha -- luis.rocha@ugent.be, 
 * José Gustavo S. Paiva -- gustavo@ufu.br, Bruno A. N. Travençolo -- travencolo@gmail.com
 *
 * You should have received a copy of the GNU General Public License along 
 * with DyNetVis. If not, see <http://www.gnu.org/licenses/>.
 *
 * ***** END LICENSE BLOCK ***** */

package forms;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.border.Border;


/**
 *
 * @author Claudio Linhares
 */
public class ForceDirectedSettings extends JDialog {
    
    public JDialog  f;
    public JProgressBar progressBar;
    
    public ForceDirectedSettings(MainForm t) {
        
        super(t);
            
        initComponents();
        this.setModal(true);
        this.frame = t;
        
        f = new JDialog();
        f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        Container content = f.getContentPane();
        
        this.f.getRootPane().setOpaque(false);
        this.f.getContentPane().setBackground(t.strong);
        this.f.setBackground(t.strong);
        
        
        f.setSize(300, 100);
        f.setModal(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        f.setResizable(false);
        f.setLocationRelativeTo(this);
        f.setVisible(false);
        
    }
    
    public String text, urlFile;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        sourcePanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        forceConstantTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        temperatureConstantTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        OKButton1 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(350, 170));
        setPreferredSize(new java.awt.Dimension(350, 200));
        setResizable(false);
        setSize(new java.awt.Dimension(300, 160));
        getContentPane().setLayout(new java.awt.FlowLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Force Directed Settings");
        jLabel7.setToolTipText("");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(jLabel7);

        sourcePanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sourcePanel1.setPreferredSize(new java.awt.Dimension(300, 110));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Force");
        jLabel9.setToolTipText("");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        sourcePanel1.add(jLabel9);

        forceConstantTextField.setText("40");
        forceConstantTextField.setPreferredSize(new java.awt.Dimension(40, 23));
        forceConstantTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceConstantTextFieldActionPerformed(evt);
            }
        });
        sourcePanel1.add(forceConstantTextField);

        jLabel4.setText("Nodes are more separated with higher numbers.");
        sourcePanel1.add(jLabel4);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Temperature");
        jLabel10.setToolTipText("");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        sourcePanel1.add(jLabel10);

        temperatureConstantTextField.setText("200");
        temperatureConstantTextField.setPreferredSize(new java.awt.Dimension(40, 23));
        temperatureConstantTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureConstantTextFieldActionPerformed(evt);
            }
        });
        sourcePanel1.add(temperatureConstantTextField);

        jLabel5.setText("The layout has better quality with higher numbers.");
        sourcePanel1.add(jLabel5);

        getContentPane().add(sourcePanel1);

        OKButton1.setText("OK");
        OKButton1.setMaximumSize(new java.awt.Dimension(65, 23));
        OKButton1.setMinimumSize(new java.awt.Dimension(65, 23));
        OKButton1.setPreferredSize(new java.awt.Dimension(65, 23));
        OKButton1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        OKButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(OKButton1);
    }// </editor-fold>//GEN-END:initComponents

    private void OKButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButton1ActionPerformed
          	
        frame.forceConstant = Integer.parseInt(forceConstantTextField.getText());
        frame.temperatureConstant = Integer.parseInt(temperatureConstantTextField.getText());
        
        f.setVisible(false);
        dispose();

    }//GEN-LAST:event_OKButton1ActionPerformed

    
    private void forceConstantTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceConstantTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_forceConstantTextFieldActionPerformed

    private void temperatureConstantTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureConstantTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_temperatureConstantTextFieldActionPerformed
    
    public static ForceDirectedSettings getInstance(MainForm t) {
        if (instance == null || instance.getParent() != t) {
            instance = new ForceDirectedSettings(t);
            
        }
        return instance;
    }

    public void display() {
        this.pack();
        this.setLocationRelativeTo(this.getParent());
        this.setVisible(true);
    }

    private static ForceDirectedSettings instance;
    private MainForm frame;
    public String lastPath;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton OKButton1;
    private javax.swing.JTextField forceConstantTextField;
    private javax.swing.JTextField forceConstantTextField1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JPanel sourcePanel1;
    private javax.swing.JTextField temperatureConstantTextField;
    // End of variables declaration//GEN-END:variables


}
